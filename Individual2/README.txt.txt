/*  
    class DecimalFraction 
  
    Вспомогательный класс, созданный для считывания десятичной дроби в заданном формате
					0.z1z2z3...zk,
	причем приватное поле-член класса digits есть контейнер, отведенный под хранение zi.
	Тип данных Digit был определен для того, чтобы каждый элемент вектора digits был
	цифрой. Поэтому для Digit использован enumeration type, а так же реализована
	функция makeDigit, которая принимает целое число и преобразует его в данные типа Digit.
	
	Конструктор DecimalFraction(string s) используется в файле makeGraphs.h для инициализации
	дроби по заранее сгенерированной строке.

	Конструктор DecimalFraction(std::ostream& os, std::istream& is) как DecimalFraction(cout, cin)
	использовался в функции main() для различных тестов для проверки правильности работы алгоритма,
	который будет описан позднее (тот, который требуется реализовать по заданию).
*/


/*
    class Fraction

    Основной класс, в котором реализован алгоритм, требуемый по заданию. Его реализация есть не что
	иное, как процедура Fraction(DecimalFraction fr) - это можно увидеть в том числе и по
	сигнатуре процедуры.

	Общий алгоритм состоит в увеличении точности подбора за счет увеличения знаменателя,
	а затем подгонки его под заданное M с помощью последовательного уменьшения значений s и t
	вычитаниями и сокращением "дроби" на НОД(s, t).

	Случаи одного и двух знаков после запятой очень неточны в абсолютном большинстве случаев,
	поэтому они выделены в отдельные ветки.


	Следует отметить, что алгоритм работает наиболее точно для k > 5, причем чем больше k,
	тем больше точность.
*/